import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Drawer и Bottom Nav Bar',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const HomeScreen(),
    );
  }
}

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  int _selectedIndex = 0; // Индекс выбранной вкладки нижней навигации

  // Список виджетов, которые будут отображаться на основе выбранной вкладки
  static const List<Widget> _widgetOptions = <Widget>[
    Center(child: Text('Главный экран', style: TextStyle(fontSize: 24))),
    Center(child: Text('Экран поиска', style: TextStyle(fontSize: 24))),
    Center(child: Text('Экран профиля', style: TextStyle(fontSize: 24))),
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Пример приложения'),
        // Кнопка для открытия Drawer автоматически добавляется Scaffold,
        // если в нем определен Drawer
      ),
      // --- Основное содержимое экрана ---
      body: _widgetOptions.elementAt(_selectedIndex),

      // --- Боковое выдвижное меню (Drawer) ---
      drawer: Drawer(
        child: ListView(
          padding: EdgeInsets.zero, // Убираем верхний отступ по умолчанию
          children: <Widget>[
            const DrawerHeader(
              decoration: BoxDecoration(
                color: Colors.blue,
              ),
              child: Text(
                'Меню навигации',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 24,
                ),
              ),
            ),
            ListTile(
              leading: const Icon(Icons.home),
              title: const Text('Главная'),
              onTap: () {
                // Действие при нажатии на "Главная"
                Navigator.pop(context); // Закрыть Drawer
                // Можно переключить на главную вкладку нижней навигации
                _onItemTapped(0);
              },
            ),
            ListTile(
              leading: const Icon(Icons.settings),
              title: const Text('Настройки'),
              onTap: () {
                // Действие при нажатии на "Настройки"
                Navigator.pop(context); // Закрыть Drawer
                // Обычно здесь переход на новый экран настроек
                // Navigator.push(context, MaterialPageRoute(builder: (context) => SettingsScreen()));
              },
            ),
            ListTile(
              leading: const Icon(Icons.info),
              title: const Text('О приложении'),
              onTap: () {
                // Действие при нажатии на "О приложении"
                Navigator.pop(context); // Закрыть Drawer
              },
            ),
          ],
        ),
      ),

      // --- Нижняя навигационная панель (BottomNavigationBar) ---
      bottomNavigationBar: BottomNavigationBar(
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Главная',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.search),
            label: 'Поиск',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: 'Профиль',
          ),
        ],
        currentIndex: _selectedIndex, // Текущий выбранный индекс
        selectedItemColor: Colors.amber[800], // Цвет выбранного элемента
        onTap: _onItemTapped, // Обработчик нажатия на элемент
      ),
    );
  }
}
